// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cells-object.proto

package object

import (
	fmt "fmt"
	math "math"
	proto "google.golang.org/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *CleanResourcesRequest) Validate() error {
	return nil
}
func (this *CleanResourcesResponse) Validate() error {
	return nil
}
func (this *DataSource) Validate() error {
	if !(len(this.Name) < 34) {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must have a length smaller than '34'`, this.Name))
	}
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *MinioConfig) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *DataSourceEvent) Validate() error {
	if this.Config != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Config); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Config", err)
		}
	}
	return nil
}
func (this *DataSourceSingleQuery) Validate() error {
	return nil
}
func (this *GetMinioConfigRequest) Validate() error {
	return nil
}
func (this *GetMinioConfigResponse) Validate() error {
	if this.MinioConfig != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.MinioConfig); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("MinioConfig", err)
		}
	}
	return nil
}
func (this *StorageStatsRequest) Validate() error {
	return nil
}
func (this *StorageStatsResponse) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *GetDataSourceConfigRequest) Validate() error {
	return nil
}
func (this *GetDataSourceConfigResponse) Validate() error {
	if this.DataSource != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DataSource); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DataSource", err)
		}
	}
	return nil
}
